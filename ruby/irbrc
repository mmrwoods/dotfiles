require 'rubygems'
require 'irb/completion'

# Add gems in global gemset to $LOAD_PATH when using bundler
# See discussion at https://gist.github.com/794915
if defined?(::Bundler)
  global_gemset = ENV['GEM_PATH'].split(':').grep(/ruby.*@global/).first
  if global_gemset
    $LOAD_PATH.concat Dir.glob("#{global_gemset}/gems/*/lib")
  end
end

IRB.conf[:PROMPT_MODE]  = :SIMPLE
IRB.conf[:SAVE_HISTORY] = 25
IRB.conf[:HISTORY_FILE] = IRB.rc_file('_history')
IRB.conf[:HISTORY_FILE] << '_rails' if ENV['RAILS_ENV']

def try_require(lib,gem=lib)
  require lib
  yield if block_given?
rescue LoadError
  warn "irbrc warning: " + $!.message.sub(/\.$/,'') + ". You can install it by running 'gem install #{gem}'"
end

# fix irb history on osx (and hopefully not break things elsewhere)
# Note: gem install blackwinter-wirble
try_require 'wirble', 'blackwinter-wirble' do
  Wirble.init :history_path => IRB.conf[:HISTORY_FILE], :history_size => IRB.conf[:SAVE_HISTORY]
end

# pretty colours makes output easier to read
try_require 'awesome_print' do
  alias pp ap
  unless IRB.version.include?('DietRB')
    IRB::Irb.class_eval do
      def output_value
        ap @context.last_value, :multiline => false
      end
    end
  else # MacRuby
    IRB.formatter = Class.new(IRB::Formatter) do
      def inspect_object(object)
        object.ai
      end
    end.new
  end
end

# add hirb console methods to main object
try_require 'hirb' do
  extend Hirb::Console
end
