require 'rubygems'
require 'irb/completion'

IRB.conf[:PROMPT_MODE]  = :SIMPLE
IRB.conf[:SAVE_HISTORY] = 25
IRB.conf[:HISTORY_FILE] = IRB.rc_file('_history')
IRB.conf[:HISTORY_FILE] << '_rails' if ENV['RAILS_ENV']

def bundle(gem)
  return if Bundler.definition.current_dependencies.map(&:name).include?(gem)
  spec_path = Dir.glob("#{Gem.dir}/specifications/#{gem}-[0-9]*.gemspec").last
  return if spec_path.nil?
  spec = Gem::Specification.load spec_path
  $LOAD_PATH.concat(Dir.glob("#{Gem.dir}/gems/#{gem}-[0-9]*/lib"))
  spec.runtime_dependencies.each{ |dependency|
    bundle(dependency.name)
  }
end

def try_require(lib,gem=lib)
  bundle(gem) if defined?(Bundler)
  require lib
  yield if block_given?
rescue LoadError
  warn $!.message.sub(/\.$/,'') + ". Try running 'gem install #{gem}'"
end

try_require 'pry' do
  Pry.start
  exit
end

# fix irb history on osx (and hopefully not break things elsewhere)
# Note: gem install blackwinter-wirble
try_require 'wirble', 'blackwinter-wirble' do
  Wirble.init :history_path => IRB.conf[:HISTORY_FILE], :history_size => IRB.conf[:SAVE_HISTORY]
end

# pretty colours makes output easier to read
try_require 'awesome_print' do
  alias pp ap
  unless IRB.version.include?('DietRB')
    IRB::Irb.class_eval do
      def output_value
        ap @context.last_value, :multiline => false
      end
    end
  else # MacRuby
    IRB.formatter = Class.new(IRB::Formatter) do
      def inspect_object(object)
        object.ai
      end
    end.new
  end
end

# add hirb console methods to main object
try_require 'hirb' do
  extend Hirb::Console
end
