# use vim to edit
Pry.editor = 'vim'

# solarized theme - see https://github.com/kyrylo/pry-theme
Pry.config.theme = 'solarized'

# debugging shortcuts - see pry-nav and pry-debugger
Pry.commands.alias_command 'c', 'continue' rescue nil
Pry.commands.alias_command 's', 'step' rescue nil
Pry.commands.alias_command 'n', 'next' rescue nil

# Custom prompt with ruby version and nesting level (stolen from https://github.com/skwp/dotfiles/blob/master/irb/pryrc)
Pry.prompt = [proc { |obj, nest_level, _| "#{RUBY_VERSION} (#{obj}):#{nest_level} > " }, proc { |obj, nest_level, _| "#{RUBY_VERSION} (#{obj}):#{nest_level} * " }]

def bundle(gem)
  return if Bundler.definition.current_dependencies.map(&:name).include?(gem)
  spec_path = Dir.glob("#{Gem.dir}/specifications/#{gem}-[0-9]*.gemspec").last
  return if spec_path.nil?
  spec = Gem::Specification.load spec_path
  $LOAD_PATH.concat(Dir.glob("#{Gem.dir}/gems/#{gem}-[0-9]*/lib"))
  spec.runtime_dependencies.each{ |dependency|
    bundle(dependency.name)
  }
end

def try_require(lib,gem=lib)
  bundle(gem) if defined?(Bundler)
  require lib
  yield if block_given?
rescue LoadError
  warn $!.message.sub(/\.$/,'') + ". Try running 'gem install #{gem}'"
end

if defined?(Rails) && Rails.version >= "3"
  extend Rails::ConsoleMethods if defined?(Rails::ConsoleMethods)
  try_require 'pry-rails'
end

try_require 'awesome_print' do
  alias pp ap
  Pry.config.print = proc {|output, value| output.puts ap(value, :multiline => false) }
end

try_require 'hirb' do
  extend Hirb::Console
end
