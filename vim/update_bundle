#!/usr/bin/env ruby

require 'fileutils'

def vim_version
  @vim_version ||= `vim --version | head -n1`.chomp.scan(/\s\d+\.\d+\s/).first.to_f
end

def plugins
  @plugins ||= {}
end

def plug(path, opts={})
  plugins[path] = opts
end

# navigation
plug 'scrooloose/nerdtree'
plug 'jlanzarotta/bufexplorer'
plug 'mmrwoods/sessionman.vim'
plug 'majutsushi/tagbar'
plug 'junegunn/fzf'
plug 'junegunn/fzf.vim'
plug 'tpope/vim-vinegar'
plug 'yegappan/mru'
plug 'romainl/vim-qf'
plug 'MTDL9/vim-window-mode'
plug 'tpope/vim-projectionist'

# syntax
plug 'kchmck/vim-coffee-script'
plug 'pangloss/vim-javascript'
plug 'MaxMEllon/vim-jsx-pretty'
plug 'tpope/vim-rails'
plug 'depuracao/vim-rdoc'
plug 'othree/html5.vim'
plug 'fatih/vim-go'
plug 'cespare/vim-toml'

# tools
plug 'tpope/vim-commentary'
plug 'ntpeters/vim-better-whitespace'
plug 'ervandew/supertab'
plug 'tpope/vim-eunuch'
plug 'cohama/lexima.vim'
plug 'vim-utils/vim-most-minimal-folds'
plug 'mtth/scratch.vim'
plug 'artnez/vim-wipeout'
plug 'tpope/vim-fugitive'
plug 'tpope/vim-bundler'
plug 'pbrisbin/vim-mkdir'
plug 'editorconfig/editorconfig-vim'
plug 'tpope/vim-surround'
plug 'RRethy/vim-hexokinase', build: 'make hexokinase'
plug 'svermeulen/vim-cutlass'
plug 'tpope/vim-repeat'
plug 'mhinz/vim-signify'
plug 'zirrostig/vim-schlepp'
plug 'ciaranm/securemodelines'
plug 'gioele/vim-autoswap'
plug 'dense-analysis/ale'
# fork of ZoomWin that tracks upstream unstable/unreleased
plug 'regedarek/ZoomWin'
plug 'neoclide/coc.nvim', branch: :release
plug 'dkarter/bullets.vim'
plug 'liuchengxu/vim-which-key'
plug 'yssl/QFEnter'
plug 'ludovicchabant/vim-gutentags'
plug 'voldikss/vim-floaterm'
plug 'puremourning/vimspector'
plug 'tpope/vim-sleuth'
plug 'jessekelighine/vindent'
plug 'airblade/vim-rooter'

# colours
# fork of solaraized that works with both 256 colors and true color
plug 'ericbn/vim-solarized'
plug 'nanotech/jellybeans.vim'
plug 'NLKNguyen/papercolor-theme'

bundle_dir = File.join(File.dirname(__FILE__), "bundle")

FileUtils.rm_rf(bundle_dir)
FileUtils.mkdir_p(bundle_dir)
FileUtils.cd(bundle_dir)

plugins.each do |path, opts|
  url = "https://github.com/#{path}.git"
  build = opts.delete(:build)
  opts = opts.map { |k, v| "--#{k}=#{v}" }.join(' ')
  dir = path.split('/').last.sub(/^n?vim\-/,'').sub(/(\-|\.)n?vim$/,'')
  dir = path.split('/').last if Dir.exists?(dir)
  puts "unpacking #{url} into #{dir}"
  `env GIT_SSL_NO_VERIFY=true git clone #{opts} #{url} #{dir}`
  if build
    puts "running build command '#{build}'"
    `cd #{dir} && #{build}`
  end
  FileUtils.rm_rf(Dir.glob("#{dir}/**/.git*")) # FIXME: shallow clone
end

puts "Overriding editorconfig for bundle dir"
system "echo root=true > .editorconfig"

print "Updating VIM Documentation... "
system "vim -c 'call pathogen#helptags()|q'"
puts $?.exitstatus == 0 ? "OK" : "FAILED"
