#!/usr/bin/env ruby

require 'fileutils'

def vim_version
  @vim_version ||= `vim --version | head -n1`.chomp.scan(/\s\d+\.\d+\s/).first.to_f
end

def plugins
  @plugins ||= {}
end

def plug(path, opts={})
  plugins[path] = opts
end

# navigation
plug 'scrooloose/nerdtree'
plug 'jlanzarotta/bufexplorer'
plug 'mmrwoods/sessionman.vim'
plug 'majutsushi/tagbar'
plug 'junegunn/fzf', build: './install --bin'
plug 'junegunn/fzf.vim'
plug 'tpope/vim-vinegar'
plug 'yegappan/mru'
plug 'romainl/vim-qf'
plug 'MTDL9/vim-window-mode'
plug 'tpope/vim-projectionist'

# syntax and formatters
plug 'kchmck/vim-coffee-script'
plug 'pangloss/vim-javascript'
plug 'MaxMEllon/vim-jsx-pretty'
plug 'tpope/vim-rails'
plug 'depuracao/vim-rdoc'
plug 'othree/html5.vim'
plug 'fatih/vim-go'
plug 'Vimjas/vim-python-pep8-indent'
plug 'architect/vim-plugin', name: 'architect'

# tools
plug 'tpope/vim-commentary'
plug 'ntpeters/vim-better-whitespace'
plug 'Yggdroot/indentLine'
plug 'tpope/vim-eunuch'
plug 'tpope/vim-endwise'
plug 'LunarWatcher/auto-pairs'
plug 'mtth/scratch.vim'
plug 'artnez/vim-wipeout'
plug 'tpope/vim-fugitive'
plug 'tpope/vim-bundler'
plug 'pbrisbin/vim-mkdir'
plug 'tpope/vim-surround'
plug 'RRethy/vim-hexokinase', build: 'make hexokinase'
plug 'svermeulen/vim-cutlass'
plug 'tpope/vim-repeat'
plug 'mhinz/vim-signify'
plug 'zirrostig/vim-schlepp'
plug 'ciaranm/securemodelines'
plug 'dense-analysis/ale'
# fork of ZoomWin that tracks upstream unstable/unreleased
plug 'regedarek/ZoomWin'
plug 'neoclide/coc.nvim', branch: :release
plug 'liuchengxu/vim-which-key'
plug 'yssl/QFEnter'
plug 'ludovicchabant/vim-gutentags'
plug 'voldikss/vim-floaterm'
plug 'puremourning/vimspector'
plug 'tpope/vim-sleuth'
plug 'jessekelighine/vindent.vim'
plug 'airblade/vim-rooter'
plug 'mg979/vim-visual-multi'
# calculate sum, avg, min, and max of visual selection
plug 'nixon/vim-vmath'
plug 'tommcdo/vim-exchange'
plug 'tweekmonster/helpful.vim'

# colours
# fork of solaraized that works with both 256 colors and true color
plug 'ericbn/vim-solarized'
plug 'NLKNguyen/papercolor-theme'
plug 'tomasiser/vim-code-dark'
plug 'joshdick/onedark.vim'
plug 'jeffkreeftmeijer/vim-dim'

bundle_dir = File.join(File.dirname(__FILE__), "pack/bundle/start")

FileUtils.rm_rf(bundle_dir)
FileUtils.mkdir_p(bundle_dir)
FileUtils.cd(bundle_dir)

plugins.each do |path, opts|
  url = "https://github.com/#{path}.git"
  build = opts.delete(:build)
  name = opts.delete(:name)
  opts = opts.map { |k, v| "--#{k}=#{v}" }.join(' ')
  if name.nil?
    name = path.split('/').last.sub(/^n?vim\-/,'').sub(/(\-|\.)n?vim$/,'')
    name = path.split('/').last if Dir.exists?(name)
  end
  puts "Installing #{url} as #{name}"
  `env GIT_SSL_NO_VERIFY=true git clone --depth=1 #{opts} #{url} #{name}`
  if build
    puts "Running build command '#{build}'"
    `cd #{name} && #{build}`
  end
end

puts "Overriding editorconfig for bundle dir"
system "echo root=true > .editorconfig"

print "Updating VIM Documentation... "
system "vim -u NONE -c 'silent! helptags ALL' -c q"
puts $?.exitstatus == 0 ? "OK" : "FAILED"
