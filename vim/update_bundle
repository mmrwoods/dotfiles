#!/usr/bin/env ruby

require 'fileutils'

def vim_version
  @vim_version ||= `vim --version | head -n1`.chomp.scan(/\s\d+\.\d+\s/).first.to_f
end

repos = %w{
  git://github.com/mileszs/ack.vim.git
  git://github.com/kchmck/vim-coffee-script.git
  git://github.com/tpope/vim-haml.git
  git://github.com/scrooloose/nerdtree.git
  git://github.com/tpope/vim-commentary.git
  git://github.com/jpalardy/spacehi.vim.git
  git://github.com/vim-scripts/bufexplorer.zip.git
  git://github.com/thickpaddy/sessionman.vim.git
  git://github.com/majutsushi/tagbar.git
  git://github.com/tpope/vim-rails.git
  git://github.com/pangloss/vim-javascript.git
  git://github.com/ervandew/supertab.git
  git://github.com/tpope/vim-endwise.git
  git://github.com/vim-scripts/mru.vim.git
  git://github.com/tpope/vim-markdown.git
  git://github.com/mattn/gist-vim.git
  git://github.com/mattn/webapi-vim.git
  git://github.com/altercation/vim-colors-solarized.git
  git://github.com/nanotech/jellybeans.vim.git
  git://github.com/derekwyatt/vim-scala.git
  git://github.com/pthrasher/conqueterm-vim.git
  git://github.com/tpope/vim-eunuch.git
  git://github.com/kien/ctrlp.vim.git
  git://github.com/tpope/vim-fugitive.git
  git://github.com/artnez/vim-wipeout.git
  git://github.com/depuracao/vim-rdoc.git
  git://github.com/Raimondi/delimitMate.git
  git://github.com/othree/xml.vim.git
  git://github.com/othree/html5.vim.git
  git://github.com/lilydjwg/colorizer.git
  git://github.com/vim-scripts/PreserveNoEOL.git
  git://github.com/tpope/vim-bundler.git
  git://github.com/pbrisbin/vim-mkdir.git
}

if vim_version >= 7.2
  repos.concat %w{
    git://github.com/Raimondi/PickAColor.git
    git://github.com/vim-scripts/ZoomWin.git
  }
end

bundle_dir = File.join(File.dirname(__FILE__), "bundle")

FileUtils.rm_rf(bundle_dir)
FileUtils.mkdir_p(bundle_dir)
FileUtils.cd(bundle_dir)

repos.each do |url|
  dir = url.split('/').last.sub(/^vim\-/,'').gsub(/\.(zip|vim|git)/, '').sub(/\-vim$/,'')
  puts "unpacking #{url} into #{dir}"
  `env GIT_SSL_NO_VERIFY=true git clone #{url} #{dir}`
  FileUtils.rm_rf(Dir.glob("#{dir}/**/.git*"))
end

print "Updating VIM Documentation... "
`vim -c 'call pathogen#helptags()|q' 2>&1 > /dev/null`
puts $?.exitstatus == 0 ? "OK" : "FAILED"
