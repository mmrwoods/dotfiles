set antialias                     " Smooth fonts
set guioptions-=T                 " Hide toolbar
set background=light              " Light background when using GUI
set guicursor=n:blinkon0          " No blinking the cursor in normal mode
set lines=999 columns=999         " Open maximized

" save session data on exit
let sessionman_save_on_exit=1

" load last session on enter, creating a default session if necessary
function <SID>LoadLastSession()
  " note - sessionman plugin stores last opened session name in g:LAST_SESSION
  if argc() == 0 && ( v:servername == 'VIM' || v:servername == 'GVIM' )
    " autocmd BufEnter * if &ft == '' && &buftype == '' | filetype detect
    if !filereadable($HOME . '/.vim/sessions/default')
      execute 'SessionSaveAs default'
    elseif exists('g:LAST_SESSION')
      execute 'SessionOpenLast'
    else
      execute 'SessionOpen default'
    endif
  elseif exists('g:LAST_SESSION')
    unlet g:LAST_SESSION
  endif
  " note - always check for existence of g:LAST_SESSION when setting title, it
  " may be cleared above, but will be re-created if a session is opened later.
  let &titlestring = "%f - %{v:servername} %{exists('g:LAST_SESSION')?'('.(g:LAST_SESSION).')':''}"
endfunction
autocmd VimEnter * call <SID>LoadLastSession()

if has("mac")

  " Toggle full-screen with Cmd+Enter
  map <D-Enter> :set invfu<CR>

  " Shortcut to refesh screen, primarily used to redetect filetypes after
  " loading last session when starting, because filetype detection only
  " runs on BufNewFile and BufRead, and calling via VimEnter doesn't work
  function <SID>Refresh()
    let currwin=winnr()
    exec 'windo filetype detect'
    exec currwin . 'wincmd w'
    exec 'nohl'
    exec 'redraw!'
  endfunction
  map <D-r> :call <SID>Refresh()<CR>

  " Set the guifont
  set guifont=Mensch:h12,Menlo:h12,Monaco:h12

  " Shortcut to maximize MacVim container window
  map <leader>x :set lines=999 columns=999<Enter>

  " Automagically fix window dimensions after opening and closing tabs
  autocmd TabEnter * set lines=999 columns=999

  " MacVim disables cocoa key bindings, but I want double S / section sign
  " mapped to hash. For some reason map doesn't work, so...
  imap ยง #
  cmap ยง #
  nmap ยง #
  vmap ยง #

  " Workarounds for macvim rendering glitches when using core text renderer
  " combined with non-native full screen mode (some parts of the screen are
  " blacked out when windows are resized without redrawing the whole screen).
  " Triggered by dynamically resized windows like CtrlP, and when opening or
  " closing quickfix and nofile windows used by other navigation plugins.
  "
  " More info:
  " https://code.google.com/p/macvim/issues/detail?id=409
  " http://vim.1045645.n5.nabble.com/Trouble-with-the-Core-Text-renderer-in-non-native-full-screen-td5713348.html
  " https://groups.google.com/forum/#!topic/vim_mac/psLlQaE4Ko0
  " https://groups.google.com/forum/#!topic/vim_mac/UkxoqhPVbeQ
  " Note: some of the above references are very old, but the issue remains.

  " Clear and redraw when entering and exiting quixkfix or nofile windows
  autocmd WinEnter,WinLeave *
    \ if &bt == 'quickfix' || &bt == 'nofile' |
    \   exec 'redraw!' |
    \ endif

  " Clear and redraw screen when entering and exiting CtrlP buffer
  let g:ctrlp_buffer_func = {
    \ 'enter': 'RedrawScreen',
    \ 'exit':  'RedrawScreen',
    \ }
  function RedrawScreen()
    exec 'redraw!'
  endfunction

  " Fix the dimensions of the CtrlP window to avoid dynamic resizing
  let g:ctrlp_match_window = 'bottom,order:btt,min:10,max:10,results:10'

  " Redraw the screen when cursor moves within CtrlP window
  " FIXME: This is shit, and is only necessary because CtrlP resizes
  " the window to the dimensions set above *after* scanning for files
  autocmd CursorMoved ControlP exec 'redraw!'

  " Starting MacVim in non-native fullscreen mode triggers similar rendering
  " glitches to those referred to above, so never start in fullscreen mode
  autocmd VimEnter * set nofullscreen

  " Automatically resize all windows when vim container window resized
  autocmd VimResized * wincmd =

endif

if has("gui_gtk")

  " always show tabline on laptop screen
  if system("/usr/bin/xrandr | awk -F',' '/Screen 0/ {gsub(\"( |current)\",\"\");printf $2}'") == "1024x768"
    set showtabline=2
  endif

endif
