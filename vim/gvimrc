set antialias                     " MacVim: smooth fonts.
set encoding=utf-8                " Use UTF-8 everywhere.
set guioptions-=T                 " Hide toolbar.
set background=light              " Background.
colorscheme eclipse               " Familiar, and easily distinguishable from terminal windows

set guicursor=n:blinkon0          " Stop the blinking cursor from blinking and distracting me in normal mode

" open maximized
set lines=999 columns=999

" save session data on exit
let sessionman_save_on_exit=1

" load last session on enter, creating a default session if necessary
function LoadSessionAndSetTitle()
  " note - sessionman plugin stores last opened session name in g:LAST_SESSION
  if argc() == 0
    if !filereadable($HOME . '/.vim/sessions/default')
      execute 'SessionSaveAs default'
    elseif exists('g:LAST_SESSION')
      execute 'SessionOpenLast'
    else
      execute 'SessionOpen default'
    endif
  else
    unlet g:LAST_SESSION
  endif
  " note - always check for existence of g:LAST_SESSION when setting title, it
  " may be cleared above, but will be re-created if a session is opened later.
  let &titlestring = "%f - %{v:servername} %{exists('g:LAST_SESSION')?'('.(g:LAST_SESSION).')':''}"
endfunction
autocmd VimEnter * call LoadSessionAndSetTitle()

if has("mac")

  " Use system clipboard as unamed register to allow easy copying and pasting
  set clipboard=unnamed

  " macvim container window gets screwed up after opening and
  " closing tabs, so map leader m to maximize (um, kind of)
  map <leader>m :set lines=999 columns=999<Enter>
  " addition - just autocmd it
  " TODO: remove the mapping if it turns out to be unnecessary
  autocmd TabEnter * set lines=999 columns=999

  " MacVim disables cocoa key bindings, but I want double S / section sign
  " mapped to hash. For some reason map doesn't work, so...
  imap ยง #
  cmap ยง #
  nmap ยง #
  vmap ยง #

  " spacehi plugin doesn't highlight tabs consistently in MacVim. Looks
  " like there's some clash between the syntax matches created by MacVim
  " and spacehi. Simple solution, use match functions instead.
  " note: latest MacVim on Lion doesn't show the underline beneath spaces,
  " hence the, hopefully temporary, hack below to set the tab and trailing
  " space highlight colours to use solid backgrounds.
  function SpaceHi()
    execute("highlight spacehiTab guibg=Red")
    let w:spaceHiMatchTabs = matchadd('spaceHiTab', '\t')
    execute("highlight spacehiTrailingSpace guibg=Yellow")
    let w:spaceHiMatchTrailingSpace = matchadd('spaceHiTrailingSpace', '\s\+$')
    let w:spacehi = 1
  endfunction

  function NoSpaceHi()
    if exists('w:spaceHiMatchTabs')
      call matchdelete(w:spaceHiMatchTabs)
    endif
    if exists('w:spaceHiMatchTrailingSpace')
      call matchdelete(w:spaceHiMatchTrailingSpace)
    endif
    let w:spacehi = 0
  endfunction

  function ToggleSpaceHi()
    if exists("w:spacehi") && w:spacehi
      call NoSpaceHi()
      echo "spacehi off"
    else
      call SpaceHi()
      echo "spacehi on"
    endif
  endfunction

  com! SpaceHi call SpaceHi()
  com! NoSpaceHi call NoSpaceHi()
  com! ToggleSpaceHi call ToggleSpaceHi()

  map! <silent> <F3> ToggleSpaceHi<CR>

endif

if has("gui_gtk")

  " always show tabline on laptop screen
  if system("/usr/bin/xrandr | awk -F',' '/Screen 0/ {gsub(\"( |current)\",\"\");printf $2}'") == "1024x768"
    set showtabline=2
  endif

  " windows keyboard shortcuts for gvim (a bit of a sledgehammer, but it'll do for now)
  source $VIMRUNTIME/mswin.vim
  " disable mswin mouse and select behaviour (mswin.vim sets this)
  behave xterm

  " yank to and paste from X11 clipboard if possible
  if v:version >= 704 || v:version == 703 && has("patch074")
    set clipboard=unnamedplus
  endif

endif

" WIP - RadRails colours
hi String guifg=#2a00ff gui=none
hi Number guifg=#0080ff gui=none
hi Comment guifg=#658173 gui=none
hi Special guifg=#2a00ff gui=none
hi Type guifg=#a4357a gui=none
hi Constant guifg=#a4357a gui=none " applies to nil, self etc.
hi rubyDefine guifg=#a4357a gui=bold
hi rubyAccess guifg=#a4357a gui=bold
hi rubyBeginEnd guifg=#a4357a gui=bold
hi rubyControl guifg=#a4357a gui=bold
hi rubyBoolean guifg=#a4357a gui=none
hi rubyFunction guifg=#683821 gui=none
hi rubyIdentifier guifg=#683821 gui=none
hi rubyConditional guifg=#a4357a gui=bold
hi rubyComment guifg=#658173 gui=none
hi rubyString guifg=#2a00ff gui=none
"hi rubyInteger guifg=#0080ff gui=none
"hi rubyFloat guifg=#0080ff gui=none
hi rubyGlobalVariable guifg=#ff0000 gui=none
hi rubyRegExpSpecial guifg=#5a1ea0 gui=none
hi rubySymbol guifg=#ff4040 gui=bold
hi rubyClassVariable guifg=#004080 gui=bold
hi rubyInstanceVariable guifg=#004080 gui=bold
