set antialias                     " Smooth fonts
set guioptions-=T                 " Hide toolbar
set background=light              " Light background when using GUI
set guicursor=n:blinkon0          " No blinking the cursor in normal mode
set lines=999 columns=999         " Open maximized

" save session data on exit
let sessionman_save_on_exit=1

" load last session on enter, creating a default session if necessary
function! <SID>LoadLastSession()
  " note - sessionman plugin stores last opened session name in g:LAST_SESSION
  if argc() == 0 && ( v:servername == 'VIM' || v:servername == 'GVIM' )
    if !filereadable($HOME . '/.vim/sessions/default')
      execute 'SessionSaveAs default'
    elseif exists('g:LAST_SESSION')
      execute 'SessionOpenLast'
    else
      execute 'SessionOpen default'
    endif
  elseif exists('g:LAST_SESSION')
    unlet g:LAST_SESSION
  endif
  " note - always check for existence of g:LAST_SESSION when setting title, it
  " may be cleared above, but will be re-created if a session is opened later.
  let &titlestring = "%f - %{v:servername} %{exists('g:LAST_SESSION')?'('.(g:LAST_SESSION).')':''}"
endfunction
autocmd VimEnter * call <SID>LoadLastSession()

if has("mac")

  " Allow standard mac keyboard shortcuts to shift lines (for pairing)
  vnoremap <D-]> >
  vnoremap <D-[> <

  " Toggle full-screen with Cmd+Enter
  nnoremap <D-Enter> :set invfu<CR>

  " Shortcut to refesh screen, primarily used to redetect filetypes after
  " loading last session when starting, because filetype detection only
  " runs on BufNewFile and BufRead, and calling via VimEnter doesn't work
  function! <SID>Refresh()
    let currwin=winnr()
    exec 'windo filetype detect'
    exec currwin . 'wincmd w'
    exec 'nohl'
    exec 'redraw!'
  endfunction
  nnoremap <D-r> :call <SID>Refresh()<CR>

  " Hack to fix equalize windows on MacVim, move to first window before resize
  " to deal with macvim non-native fullscreen weirdness - if a bottom split is
  " focused, it gets resized incorrectly when automatically equalising windows
  function! <SID>EqualWindows()
    let currwin=winnr()
    exec '1 wincmd w'
    exec 'wincmd ='
    exec currwin . 'wincmd w'
  endfunction
  nnoremap = :call <SID>EqualWindows()<CR>
  nnoremap <C-w>= :call <SID>EqualWindows()<CR>

  " Similar to the issue above, and presumably the same root cause, when
  " switching back to MacVim running in a non-native fullscreen window from
  " some other program running non-native fullscreen window (e.g. iTerm), if
  " a bottom split is focused it gets resized slighly so things are no longer
  " equalised. These autocmds just move to the first window before vim loses
  " focus, and then moves back to the original window when it regains focus.
  " It is admittedly a horrible hack, but it also seems to work quite well.
  autocmd VimLeave,FocusLost *
    \ let g:LAST_WINDOW = winnr() |
    \ exec '1 wincmd w'
  autocmd VimEnter,FocusGained *
    \ if exists('g:LAST_WINDOW') |
    \   exec g:LAST_WINDOW . 'wincmd w' |
    \ endif

  " Set the guifont
  set guifont=Mensch:h12,Menlo:h12,Monaco:h12

  " Automagically fix window dimensions after opening and closing tabs
  autocmd TabEnter * set lines=999 columns=999

  " MacVim disables cocoa key bindings, but I want double S / section sign
  " mapped to hash. For some reason map doesn't work, so...
  inoremap ยง #
  cnoremap ยง #
  nnoremap ยง #
  vnoremap ยง #

  " Automatically resize all windows when vim container window resized
  autocmd VimResized * call <SID>EqualWindows()

endif
