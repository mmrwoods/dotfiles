export TERM='xterm-color'
export CLICOLOR=1
export LSCOLORS=ExFxCxDxBxEgedabagacad
export PATH=$PATH:$HOME/bin

export EDITOR=vim

export NODE_PATH=/usr/local/lib/node_modules

# Bash specific, i.e. not bourne shell compatible stuff goes here.
# Allows file be sourced from .profile, without causing problems
# when sudo is configured to keep the HOME env variable and target
# user's shell is bourne compatible, but not bash.
if [ $SHELL = '/bin/bash' ]; then

  # bash-completion for OSX
  if [ `which brew` ] && [ -f `brew --prefix`/etc/bash_completion ]; then
    # homebrew
    source `brew --prefix`/etc/bash_completion
  elif [ -f /opt/local/etc/bash_completion ]; then
    # macports
    source /opt/local/etc/bash_completion
  fi

  # git completion and prompt
  type __git_ps1 >& /dev/null
  if [ $? -ne 0 ]; then
    source ~/dotfiles/bash/git-completion.sh
  fi

  # rails command completion
  source ~/dotfiles/bash/rails.bash

  GIT_PS1_SHOWDIRTYSTATE=1
  PS1='\w$(__git_ps1 "[%s]")\$ '

  # if some kind of xterm, use prompt command to set window title
  if [ "${TERM%%-*}" == xterm ]; then
    PROMPT_COMMAND='echo -ne "\033]0;${PWD/#$HOME/~}\007"'
  fi

  # use macvim's huge vim with ruby support on osx - https://github.com/mxcl/homebrew/issues/5148
  if [ `which brew` ]; then
    macvim_version=`brew list --versions macvim | sed 's/.* \([0-9\.\-]*\)$/\1/'`
    if [ -n "${macvim_version}" ]; then
      alias vim=`brew --prefix`/Cellar/macvim/${macvim_version}/MacVim.app/Contents/MacOS/Vim
    fi
  fi

fi

# use gnome-open rather than openvt
if [ `which gnome-open` ]; then
  alias open="gnome-open"
fi

# because I keep forgetting how to do it in Linux
if [ ! `which pbcopy` ] && [ `which xclip` ]; then
  alias pbcopy="xclip -selection clipboard"
  alias pbpaste="xclip -o -selection clipboard"
fi

set -o vi

alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias grep='grep --color=auto'

alias be='bundle exec'
alias hs='history'

alias cuke='cucumber'

if [ -f /usr/local/bin/ctags ]; then
  alias ctags='/usr/local/bin/ctags'
fi

# current gems dir (works with rvm and bundler)
gems() {
  bundle config > /dev/null
  eval $(
    if [ $? -eq 0 ]; then
      echo "bundle exec "
    fi
    echo "ruby -r rubygems -e 'puts Gem.path.detect{|d| not d.include?(\".gem\") }'"
  )
}
